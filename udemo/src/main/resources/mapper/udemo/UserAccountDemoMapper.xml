<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.udemo.mapper.UserAccountDemoMapper">
    
    <resultMap type="UserAccountDemo" id="UserAccountDemoResult">
        <result property="id"    column="id"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="email"    column="email"    />
        <result property="phone"    column="phone"    />
        <result property="status"    column="status"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="deleted"    column="deleted"    />
    </resultMap>

    <sql id="selectUserAccountDemoVo">
        select id, username, password, email, phone, status, created_at, updated_at, deleted from user_account_demo
    </sql>

    <select id="selectUserAccountDemoList" parameterType="UserAccountDemo" resultMap="UserAccountDemoResult">
        <include refid="selectUserAccountDemoVo"/>
        <where>  
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectUserAccountDemoById" parameterType="String" resultMap="UserAccountDemoResult">
        <include refid="selectUserAccountDemoVo"/>
        where id = #{id}
    </select>

    <insert id="insertUserAccountDemo" parameterType="UserAccountDemo" useGeneratedKeys="true" keyProperty="id">
        insert into user_account_demo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="email != null">email,</if>
            <if test="phone != null">phone,</if>
            <if test="status != null">status,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="deleted != null">deleted,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="email != null">#{email},</if>
            <if test="phone != null">#{phone},</if>
            <if test="status != null">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="deleted != null">#{deleted},</if>
         </trim>
    </insert>

    <update id="updateUserAccountDemo" parameterType="UserAccountDemo">
        update user_account_demo
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUserAccountDemoById" parameterType="String">
        delete from user_account_demo where id = #{id}
    </delete>

    <delete id="deleteUserAccountDemoByIds" parameterType="String">
        delete from user_account_demo where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>